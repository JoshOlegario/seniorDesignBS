a = read pin 22 (Sensor 1)
b = read pin 24 (Sensor 2)  
c = read pin 26 (Sensor 3)
```

### **Step 2: Check if Any Sensor Changed**
```
IF any sensor is different from last reading:
    → Log the change to Serial (timestamp + all sensor states)
    → Update the "last reading" values
```

### **Step 3: Are We in Run-Off Mode?**

**IF YES (motor is clearing sand):**
- Check if 5 seconds have passed
  - **If 5 seconds done**: Turn motor OFF, exit run-off mode
  - **If still running**: Keep motor ON, skip the rest, go back to Step 1

**IF NO:** Continue to Step 4...

### **Step 4: Check Stop Conditions**

**Condition A: Both Sensor 1 AND Sensor 2 are LOW**
```
IF (a == LOW AND b == LOW):
    IF motor is currently ON:
        → Start run-off timer (5 seconds)
        → Log "Starting run-off"
        → Motor stays ON for now
```

**Condition B: Sensor 3 is HIGH (Emergency)**
```
ELSE IF (c == HIGH):
    IF motor is currently ON:
        → Start run-off timer (5 seconds)
        → Log "Emergency - Starting run-off"
        → Motor stays ON for now
```

**Condition C: Normal Operation**
```
ELSE (none of the stop conditions):
    → Keep motor ON (or turn it back ON)
```

### **Step 5: Wait 100ms and Repeat**

---

## **EXAMPLE SCENARIOS:**

### **Scenario 1: Normal Running**
```
Sensors: a=HIGH, b=HIGH, c=LOW
→ Motor: ON
→ Keep running normally
```

### **Scenario 2: Both Sensors Detect "Empty"**
```
1. a goes LOW, b goes LOW
2. Log: "Both sensors LOW - Starting run-off"
3. Motor stays ON for 5 more seconds (clearing sand)
4. After 5 seconds → Motor turns OFF
5. Log: "Run-off complete - Motor OFF"
```

### **Scenario 3: Sensor Detect to much sand in hopper**
```
1. c goes HIGH
2. Log: "Sensor 3 HIGH - Starting run-off"
3. Motor stays ON for 5 seconds (clearing sand)
4. After 5 seconds → Motor turns OFF
```

### **Scenario 4: System Recovers**
```
1. During run-off, sensors go back to normal (a=HIGH or b=HIGH, c=LOW)
2. Run-off completes → Motor turns OFF
3. Next loop: Condition C triggers → Motor turns back ON
